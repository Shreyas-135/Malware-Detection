import pandas as pd
import pyshark  # For PCAP parsing
import joblib  # Use joblib for loading the scaler

# Load scaler using joblib
scaler = joblib.load('app/models/scaler.joblib')

# Specify the required columns here based on the trained model's requirements.
required_columns = [
    'L4_SRC_PORT', 'IPV4_SRC_ADDR', 'L4_DST_PORT', 'IPV4_DST_ADDR', 
    'FLOW_DURATION_MILLISECONDS', 'PROTOCOL', 'TCP_FLAGS', 'TCP_WIN_MAX_IN'
]

def unpack_and_preprocess(pcap_file_path):
    # Extract data from PCAP using pyshark
    packets = pyshark.FileCapture(pcap_file_path)

    # Prepare a DataFrame to hold the required data
    data = []
    for pkt in packets:
        try:
            # Extract fields
            data.append({
                'L4_SRC_PORT': pkt.tcp.srcport if 'tcp' in pkt else None,
                'L4_DST_PORT': pkt.tcp.dstport if 'tcp' in pkt else None,
                'IPV4_SRC_ADDR': pkt.ip.src if 'ip' in pkt else None,
                'IPV4_DST_ADDR': pkt.ip.dst if 'ip' in pkt else None,
                # Add other fields as needed
            })
        except AttributeError:
            continue  # Skip packets without required fields

    # Create a DataFrame and fill missing values
    df = pd.DataFrame(data)
    df.fillna(0, inplace=True)

    # Ensure the DataFrame has the required columns
    missing_cols = set(required_columns) - set(df.columns)
    for col in missing_cols:
        df[col] = 0  # Add missing columns

    # Apply scaling
    df[required_columns] = scaler.transform(df[required_columns])

    return df[required_columns]
